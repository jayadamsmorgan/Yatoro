name: Build macOS (x86 and ARM64)

on:
  push:
    branches: [ "build-workflow" ] # Change to "master" once it's fully working
  pull_request:
    branches: [ "build-workflow" ] # Change to "master" once it's fully working

jobs:
  build:
    name: Build for ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runsOn: macos-latest-large

          - arch: arm64
            runsOn: macos-latest

    runs-on: ${{ matrix.runsOn }}
    
    env:
      SWIFT_PATH: /Library/Developer/Toolchains/swift-6.0.3-RELEASE.xctoolchain/usr/bin

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Import codesigning certificate
        uses: apple-actions/import-codesign-certs@v3
        with: 
          p12-file-base64: $APPLE_CERT_DATA
          p12-password: $APPLE_CERT_PASSWORD
        env:
          APPLE_CERT_DATA: ${{ secrets.APPLE_CERT_DATA }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}

      - name: Install Swift
        run: |
          curl -O https://download.swift.org/swift-6.0.3-release/xcode/swift-6.0.3-RELEASE/swift-6.0.3-RELEASE-osx.pkg
          sudo installer -pkg swift-6.0.3-RELEASE-osx.pkg -target /
          $SWIFT_PATH/swift --version

      - name: Install dependencies
        run: brew install notcurses

      - name: Build
        run: $SWIFT_PATH/swift build -c release

      - name: Sign & Notarize binary
        run: |
          codesign --sign "German Berdnikov (U537EV56Z3)" -o runtime --timestamp .build/release/yatoro
          zip yatoro.zip .build/release/yatoro
          xcrun notarytool submit yatoro.zip --apple-id $APPLE_NOTARY_USER --team-id U537EV56Z3 --password $APPLE_NOTARY_PASSWORD --wait
        env:
          APPLE_NOTARY_USER: ${{ secrets.APPLE_NOTARY_USER }}
          APPLE_NOTARY_PASSWORD: ${{ secrets.APPLE_NOTARY_PASSWORD }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-build
          path: yatoro.zip
